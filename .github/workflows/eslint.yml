name: Linting Code
on:
  pull_request:
    branches: [develop, main, feature/*]

jobs:
  eslint_flow_merge:
    name: eslint_merge
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4
      - name: Node.JS Setup
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: .nvmrc

      - name: Yarn update to V4
        run: corepack enable && yarn set version berry

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: linux-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            linux-yarn-

      - name: "Install dependencies"
        run: yarn workspaces focus gcforms flag_initialization

        env:
          CI: TRUE
      - name: Test Code Linting on Merge
        if: github.event_name == 'push'
        run: yarn lint
        # If there is an error stop here and fail the test
  eslint_flow_pr:
    name: eslint_pr
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v1.2.0
      - name: Node.JS Setup
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: .nvmrc

      - name: Yarn update to V4
        run: corepack enable && yarn set version berry

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: linux-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            linux-yarn-

      - name: "Install dependencies"
        run: yarn workspaces focus gcforms flag_initialization
        env:
          CI: TRUE
      - name: Test Code Linting on Pull Request
        run: yarn lint
        continue-on-error: true
      - name: Save Code Linting Report JSON
        # npm script for ESLint
        # eslint --output-file eslint_report.json --format json src
        # See https://eslint.org/docs/user-guide/command-line-interface#options
        run: yarn lint:report
        # Continue to the next step even if this fails
        continue-on-error: true
      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@d57a1193d4c59cbfbf3f86c271f42612f9dbd9e9 # tag=3.0.0
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          report-json: "eslint_report.json"
        continue-on-error: true
      - name: Upload ESLint report
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # tag=v4.3.3
        with:
          name: eslint_report.json
          path: eslint_report.json
