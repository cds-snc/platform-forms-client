name: Production â€” Push container to ECR

on:
  release:
    types: [published]

env:
  ECR_REPOSITORY: form_viewer_production
  TAG_VERSION: ${{  github.ref_name }}
  COGNITO_APP_CLIENT_ID: ${{secrets.PRODUCTION_COGNITO_APP_CLIENT_ID}}
  COGNITO_USER_POOL_ID: ${{ secrets.PRODUCTION_COGNITO_USER_POOL_ID}}

jobs:
  push-production:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2.7.0
        with:
          ref: ${{ env.TAG_VERSION }}

      - name: Build Form Viewer
        run: |
          docker build -t base \
          --build-arg COGNITO_APP_CLIENT_ID=$COGNITO_APP_CLIENT_ID \
          --build-arg COGNITO_USER_POOL_ID=$COGNITO_USER_POOL_ID . \
          --build-arg INDEX_SITE=true

      - name: Configure Production AWS credentials
        id: aws-form-viewer
        uses: aws-actions/configure-aws-credentials@fbaaea849082b09c6da098c397edb77cf7d2875a
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Login to Production Amazon ECR
        id: login-ecr-production
        uses: aws-actions/amazon-ecr-login@99fe8befaecdc063ad51266ca32e2983e58efd9e

      - name: Tag Images for Production
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-production.outputs.registry }}
        run: |
          docker tag base $ECR_REGISTRY/$ECR_REPOSITORY:$TAG_VERSION
          docker tag base $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Push containers to Production Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-production.outputs.registry }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$TAG_VERSION
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Logout of Production Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr-production.outputs.registry }}
