name: Production â€” Push container to ECR

on:
  push:
    branches: [main]
    paths-ignore:
      # Ignore all files and folders that start with '.'
      - ".**"
      # Ignore all files and folder in fixtures, tests, utils, etc.
      - "__*/**"

env:
  ECR_REPOSITORY: form_viewer_production
  GITHUB_SHA: ${{ github.sha }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.PRODUCTION_GOOGLE_CLIENT_SECRET }}
  GOOGLE_CLIENT_ID: ${{ secrets.PRODUCTION_GOOGLE_CLIENT_ID }}
  COGNITO_APP_CLIENT_ID: ${{secrets.PRODUCTION_COGNITO_APP_CLIENT_ID}}
  COGNITO_USER_POOL_ID: ${{ secrets.PRODUCTION_COGNITO_USER_POOL_ID}}

jobs:
  push-production:
    runs-on: ubuntu-latest
    steps:
      - name: Wait for Jest tests to pass
        uses: fountainhead/action-wait-for-check@4699210ccc66e2a13260803fadbb77085421b891 # tag=v1.0.0
        id: wait-for-jest-tests
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: Jest
          ref: ${{ github.sha }}

      - name: Wait for Cypress tests to pass
        uses: fountainhead/action-wait-for-check@4699210ccc66e2a13260803fadbb77085421b891 # tag=v1.0.0
        id: wait-for-cypress-tests
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: Cypress
          ref: ${{ github.sha }}

      - name: Wait for ESLint tests to pass
        uses: fountainhead/action-wait-for-check@4699210ccc66e2a13260803fadbb77085421b891 # tag=v1.0.0
        id: wait-for-eslint-tests
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: eslint_merge
          ref: ${{ github.sha }}

      - name: Checkout
        uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791 # tag=v2

      - name: Build Form Viewer
        run: |
          docker build -t base \
          --build-arg PRODUCTION_ENV=true \
          --build-arg GITHUB_SHA_ARG=$GITHUB_SHA \
          --build-arg GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET \
          --build-arg GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID \
          --build-arg COGNITO_APP_CLIENT_ID=$COGNITO_APP_CLIENT_ID \
          --build-arg COGNITO_USER_POOL_ID=$COGNITO_USER_POOL_ID .

      - name: Configure Production AWS credentials
        id: aws-form-viewer
        uses: aws-actions/configure-aws-credentials@2303fbd55912a27c46f86f7733f05273fad3f2d9
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Login to Production Amazon ECR
        id: login-ecr-production
        uses: aws-actions/amazon-ecr-login@f0aa41acbc9ad88b14bff7acd2c9a615529148a2

      - name: Tag Images for Production
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-production.outputs.registry }}
        run: |
          docker tag base $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA
          docker tag base $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Push containers to Production Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-production.outputs.registry }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Logout of Production Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr-production.outputs.registry }}
