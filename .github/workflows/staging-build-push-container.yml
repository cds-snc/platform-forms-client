name: "Staging â€” Push container to ECR"

on:
  push:
    branches: [develop]
    paths-ignore:
      # Ignore all files and folders that start with '.'
      - ".**"
      # Ignore all files and folder in fixtures, tests, utils, etc.
      - "__*/**"

env:
  ECR_REPOSITORY: form_viewer_staging
  GITHUB_SHA: ${{ github.sha }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.STAGING_GOOGLE_CLIENT_SECRET }}
  GOOGLE_CLIENT_ID: ${{ secrets.STAGING_GOOGLE_CLIENT_ID }}
  COGNITO_APP_CLIENT_ID: ${{secrets.STAGING_COGNITO_APP_CLIENT_ID}}
  COGNITO_USER_POOL_ID: ${{ secrets.STAGING_COGNITO_USER_POOL_ID}}

jobs:
  push-staging:
    runs-on: ubuntu-latest
    steps:
      - name: Wait for Jest tests to pass
        uses: fountainhead/action-wait-for-check@4699210ccc66e2a13260803fadbb77085421b891 # tag=v1.0.0
        id: wait-for-jest-tests
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: Jest
          ref: ${{ github.sha }}

      - name: Wait for Cypress tests to pass
        uses: fountainhead/action-wait-for-check@4699210ccc66e2a13260803fadbb77085421b891 # tag=v1.0.0
        id: wait-for-cypress-tests
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: Cypress
          ref: ${{ github.sha }}

      - name: Wait for ESLint tests to pass
        uses: fountainhead/action-wait-for-check@4699210ccc66e2a13260803fadbb77085421b891 # tag=v1.0.0
        id: wait-for-eslint-tests
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: eslint_merge
          ref: ${{ github.sha }}

      - name: Checkout
        uses: actions/checkout@e2f20e631ae6d7dd3b768f56a5d2af784dd54791 # tag=v2

      - name: Build Form Viewer
        run: |
          docker build -t base \
            --build-arg GITHUB_SHA_ARG=$GITHUB_SHA \
            --build-arg GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET \
            --build-arg GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID \
            --build-arg COGNITO_APP_CLIENT_ID=$COGNITO_APP_CLIENT_ID \
            --build-arg COGNITO_USER_POOL_ID=$COGNITO_USER_POOL_ID .

      - name: Configure Staging AWS credentials
        id: aws-form-viewer
        uses: aws-actions/configure-aws-credentials@2303fbd55912a27c46f86f7733f05273fad3f2d9
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Login to Staging Amazon ECR
        id: login-ecr-staging
        uses: aws-actions/amazon-ecr-login@261a7de32bda11ba01f4d75c4ed6caf3739e54be

      - name: Tag Images for Staging
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-staging.outputs.registry }}
        run: |
          docker tag base $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA
          docker tag base $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Push containers to Staging Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-staging.outputs.registry }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Logout of Staging Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr-staging.outputs.registry }}

      - name: Generate forms-client/app/docker SBOM
        uses: cds-snc/security-tools/.github/actions/generate-sbom@4c6b386722985552f3f008d04279a3f01402cc35 # renovate: tag=v1
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-staging.outputs.registry }}
        with:
          dependency_track_api_key: ${{ secrets.DEPENDENCY_TRACK_API_KEY }}
          docker_image: $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA
          project_name: forms-client/app/docker
          project_type: docker
