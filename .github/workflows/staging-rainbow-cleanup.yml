name: Rainbow cleanup (staging)

on:
  workflow_run:
    workflows: ["Deploy to Staging"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      deployment-identifier:
        description: "Deployment identifier"
        type: string
        required: true
  schedule:
    - cron: "0 4 * * *" # Nightly at 4am

env:
  AWS_ACCOUNT_ID: ${{ vars.STAGING_AWS_ACCOUNT_ID }}
  AWS_REGION: ca-central-1
  LOAD_BALANCER_LISTENER_ARN: ${{ vars.STAGING_LOAD_BALANCER_LISTENER_ARN }}
  MAXIMUM_NUMBER_OF_RAINBOW_DEPLOYMENTS_TO_KEEP_ALIVE: 2

permissions:
  id-token: write
  contents: read

jobs:
  cleanup-workflow-run-or-dispatch:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_run' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/platform-forms-client-apply
          role-session-name: RainbowCleanup
          aws-region: ${{ env.AWS_REGION }}

      - name: Cleanup triggered by GC Forms deployment failure
        if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'failure' }}
        uses: ./.github/workflows/rainbow/cleanup
        with:
          deployment-identifier: ${{ github.event.workflow_run.head_sha }}
          load-balancer-listener-arn: ${{ env.LOAD_BALANCER_LISTENER_ARN }}

      - name: Cleanup triggered manually
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: ./.github/workflows/rainbow/cleanup
        with:
          deployment-identifier: ${{ inputs.deployment-identifier }}
          load-balancer-listener-arn: ${{ env.LOAD_BALANCER_LISTENER_ARN }}

  cleanup-schedule-1:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'schedule' }}
    outputs:
      ids: ${{ steps.find-rainbow-deployments-ids.outputs.ids }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/platform-forms-client-apply
          role-session-name: RainbowCleanup
          aws-region: ${{ env.AWS_REGION }}

      - name: Find rainbow deployments to clean up
        id: find-rainbow-deployments-ids
        run: |
          arnList=($(aws elbv2 describe-rules \
            --listener-arn ${{ env.LOAD_BALANCER_LISTENER_ARN }} \
            --no-paginate \
            --query "Rules[?Priority > '${{ env.MAXIMUM_NUMBER_OF_RAINBOW_DEPLOYMENTS_TO_KEEP_ALIVE }}' && contains(Actions[0].ForwardConfig.TargetGroups[0].TargetGroupArn, 'rainbow')].RuleArn" \
            | jq -r '.[]'))

          if [ ${#arnList[*]} -gt 0 ]; then
            deploymentIds=$(aws elbv2 describe-tags \
            --resource-arns "${arnList[@]}" \
            | jq -r '[.TagDescriptions[].Tags[] | select(.Key == "Name") | .Value | sub("^rainbow-"; "")]')

            echo "ids=$(echo $deploymentIds | sed 's/ //g')" >> "$GITHUB_OUTPUT"
          fi

  cleanup-schedule-2:
    runs-on: ubuntu-latest
    needs: cleanup-schedule-1
    if: ${{ needs.cleanup-schedule-1.outputs.ids != '' }}
    strategy:
      matrix:
        deployment-identifier: ${{ fromJSON(needs.cleanup-schedule-1.outputs.ids) }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/platform-forms-client-apply
          role-session-name: RainbowCleanup
          aws-region: ${{ env.AWS_REGION }}

      - name: Cleanup triggered by scheduler
        uses: ./.github/workflows/rainbow/cleanup
        with:
          deployment-identifier: ${{ matrix.deployment-identifier }}
          load-balancer-listener-arn: ${{ env.LOAD_BALANCER_LISTENER_ARN }}