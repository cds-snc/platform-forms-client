import { FeatureImplementation } from "@headless-tree/core";

export const scrollIntoViewFeature: FeatureImplementation = {
  // ... other feature properties

  itemInstance: {
    getProps: ({ item, prev }) => ({
      ...prev?.(), // include other props generated by other features
      "aria-selected": item.isSelected() ? "true" : "false",

      onClick: (e: React.MouseEvent) => {
        // Call the previous onClick implementation (maintains selection, expansion, etc.)
        prev?.()?.onClick?.(e);

        let id = item.getId();

        if (id === "confirmation") {
          id = "end";
        }

        // Special elements
        if (id === "intro" || id === "policy" || id === "end") {
          setTimeout(() => {
            // use dom to scroll to the element
            const el = document.getElementById(id);
            if (el) {
              (el as HTMLDetailsElement).open = true;
              el.scrollIntoView({ behavior: "smooth", block: "center" });
            }
          }, 200);

          return;
        }

        setTimeout(() => {
          const el = document.getElementById(`item-${id}`);

          if (el) {
            el.scrollIntoView({ behavior: "smooth", block: "center" });
          }
        }, 200);
      },
    }),
  },
};
