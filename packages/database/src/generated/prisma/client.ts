/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 * If you're looking for something you can import in the client-side of your application, please refer to the `browser.ts` file instead.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from "node:process";
import * as path from "node:path";
import { fileURLToPath } from "node:url";
globalThis["__dirname"] = path.dirname(fileURLToPath(import.meta.url));

import * as runtime from "@prisma/client/runtime/client";
import * as $Enums from "./enums.js";
import * as $Class from "./internal/class.js";
import * as Prisma from "./internal/prismaNamespace.js";

export * as $Enums from "./enums.js";
export * from "./enums.js";
/**
 * ## Prisma Client
 *
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Accounts
 * const accounts = await prisma.account.findMany()
 * ```
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname);
export type PrismaClient<
  LogOpts extends Prisma.LogLevel = never,
  OmitOpts extends Prisma.PrismaClientOptions["omit"] = Prisma.PrismaClientOptions["omit"],
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = $Class.PrismaClient<LogOpts, OmitOpts, ExtArgs>;
export { Prisma };

/**
 * Model Account
 *
 */
export type Account = Prisma.AccountModel;
/**
 * Model ApiServiceAccount
 *
 */
export type ApiServiceAccount = Prisma.ApiServiceAccountModel;
/**
 * Model Session
 *
 */
export type Session = Prisma.SessionModel;
/**
 * Model Template
 *
 */
export type Template = Prisma.TemplateModel;
/**
 * Model DeliveryOption
 *
 */
export type DeliveryOption = Prisma.DeliveryOptionModel;
/**
 * Model Privilege
 *
 */
export type Privilege = Prisma.PrivilegeModel;
/**
 * Model User
 *
 */
export type User = Prisma.UserModel;
/**
 * Model VerificationToken
 *
 */
export type VerificationToken = Prisma.VerificationTokenModel;
/**
 * Model Setting
 *
 */
export type Setting = Prisma.SettingModel;
/**
 * Model CognitoCustom2FA
 *
 */
export type CognitoCustom2FA = Prisma.CognitoCustom2FAModel;
/**
 * Model SecurityQuestion
 *
 */
export type SecurityQuestion = Prisma.SecurityQuestionModel;
/**
 * Model SecurityAnswer
 *
 */
export type SecurityAnswer = Prisma.SecurityAnswerModel;
/**
 * Model MagicLink
 *
 */
export type MagicLink = Prisma.MagicLinkModel;
/**
 * Model Invitation
 *
 */
export type Invitation = Prisma.InvitationModel;
/**
 * Model UserFeature
 *
 */
export type UserFeature = Prisma.UserFeatureModel;
