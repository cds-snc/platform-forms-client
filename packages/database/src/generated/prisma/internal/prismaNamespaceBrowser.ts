/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * WARNING: This is an internal file that is subject to change!
 *
 * ðŸ›‘ Under no circumstances should you import this file directly! ðŸ›‘
 *
 * All exports from this file are wrapped under a `Prisma` namespace object in the browser.ts file.
 * While this enables partial backward compatibility, it is not part of the stable public API.
 *
 * If you are looking for your Models, Enums, and Input Types, please import them from the respective
 * model files in the `model` directory!
 */

import * as runtime from "@prisma/client/runtime/index-browser";

export type * from "../models.js";
export type * from "./prismaNamespace.js";

export const Decimal = runtime.Decimal;

export const NullTypes = {
  DbNull: runtime.objectEnumValues.classes.DbNull as new (
    secret: never
  ) => typeof runtime.objectEnumValues.instances.DbNull,
  JsonNull: runtime.objectEnumValues.classes.JsonNull as new (
    secret: never
  ) => typeof runtime.objectEnumValues.instances.JsonNull,
  AnyNull: runtime.objectEnumValues.classes.AnyNull as new (
    secret: never
  ) => typeof runtime.objectEnumValues.instances.AnyNull,
};
/**
 * Helper for filtering JSON entries that have `null` on the database (empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const DbNull = runtime.objectEnumValues.instances.DbNull;
/**
 * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const JsonNull = runtime.objectEnumValues.instances.JsonNull;
/**
 * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
 *
 * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
 */
export const AnyNull = runtime.objectEnumValues.instances.AnyNull;

export const ModelName = {
  Account: "Account",
  ApiServiceAccount: "ApiServiceAccount",
  Session: "Session",
  Template: "Template",
  DeliveryOption: "DeliveryOption",
  Privilege: "Privilege",
  User: "User",
  VerificationToken: "VerificationToken",
  Setting: "Setting",
  CognitoCustom2FA: "CognitoCustom2FA",
  SecurityQuestion: "SecurityQuestion",
  SecurityAnswer: "SecurityAnswer",
  MagicLink: "MagicLink",
  Invitation: "Invitation",
  UserFeature: "UserFeature",
} as const;

export type ModelName = (typeof ModelName)[keyof typeof ModelName];

/*
 * Enums
 */

export const TransactionIsolationLevel = runtime.makeStrictEnum({
  ReadUncommitted: "ReadUncommitted",
  ReadCommitted: "ReadCommitted",
  RepeatableRead: "RepeatableRead",
  Serializable: "Serializable",
} as const);

export type TransactionIsolationLevel =
  (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel];

export const AccountScalarFieldEnum = {
  id: "id",
  userId: "userId",
  type: "type",
  provider: "provider",
  providerAccountId: "providerAccountId",
  refresh_token: "refresh_token",
  access_token: "access_token",
  expires_at: "expires_at",
  token_type: "token_type",
  scope: "scope",
  id_token: "id_token",
  session_state: "session_state",
} as const;

export type AccountScalarFieldEnum =
  (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum];

export const ApiServiceAccountScalarFieldEnum = {
  id: "id",
  created_at: "created_at",
  updated_at: "updated_at",
  templateId: "templateId",
  publicKeyId: "publicKeyId",
  publicKey: "publicKey",
} as const;

export type ApiServiceAccountScalarFieldEnum =
  (typeof ApiServiceAccountScalarFieldEnum)[keyof typeof ApiServiceAccountScalarFieldEnum];

export const SessionScalarFieldEnum = {
  id: "id",
  userId: "userId",
  expires: "expires",
  sessionToken: "sessionToken",
} as const;

export type SessionScalarFieldEnum =
  (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum];

export const TemplateScalarFieldEnum = {
  id: "id",
  created_at: "created_at",
  updated_at: "updated_at",
  name: "name",
  jsonConfig: "jsonConfig",
  isPublished: "isPublished",
  formPurpose: "formPurpose",
  publishReason: "publishReason",
  publishFormType: "publishFormType",
  publishDesc: "publishDesc",
  securityAttribute: "securityAttribute",
  bearerToken: "bearerToken",
  ttl: "ttl",
  closingDate: "closingDate",
  closedDetails: "closedDetails",
  saveAndResume: "saveAndResume",
  notificationsInterval: "notificationsInterval",
} as const;

export type TemplateScalarFieldEnum =
  (typeof TemplateScalarFieldEnum)[keyof typeof TemplateScalarFieldEnum];

export const DeliveryOptionScalarFieldEnum = {
  id: "id",
  emailAddress: "emailAddress",
  emailSubjectEn: "emailSubjectEn",
  emailSubjectFr: "emailSubjectFr",
  templateId: "templateId",
} as const;

export type DeliveryOptionScalarFieldEnum =
  (typeof DeliveryOptionScalarFieldEnum)[keyof typeof DeliveryOptionScalarFieldEnum];

export const PrivilegeScalarFieldEnum = {
  id: "id",
  name: "name",
  descriptionEn: "descriptionEn",
  descriptionFr: "descriptionFr",
  permissions: "permissions",
  priority: "priority",
} as const;

export type PrivilegeScalarFieldEnum =
  (typeof PrivilegeScalarFieldEnum)[keyof typeof PrivilegeScalarFieldEnum];

export const UserScalarFieldEnum = {
  id: "id",
  name: "name",
  email: "email",
  image: "image",
  emailVerified: "emailVerified",
  lastLogin: "lastLogin",
  active: "active",
  notes: "notes",
  createdAt: "createdAt",
} as const;

export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum];

export const VerificationTokenScalarFieldEnum = {
  identifier: "identifier",
  token: "token",
  expires: "expires",
} as const;

export type VerificationTokenScalarFieldEnum =
  (typeof VerificationTokenScalarFieldEnum)[keyof typeof VerificationTokenScalarFieldEnum];

export const SettingScalarFieldEnum = {
  internalId: "internalId",
  nameEn: "nameEn",
  nameFr: "nameFr",
  descriptionEn: "descriptionEn",
  descriptionFr: "descriptionFr",
  value: "value",
} as const;

export type SettingScalarFieldEnum =
  (typeof SettingScalarFieldEnum)[keyof typeof SettingScalarFieldEnum];

export const CognitoCustom2FAScalarFieldEnum = {
  id: "id",
  email: "email",
  cognitoToken: "cognitoToken",
  verificationCode: "verificationCode",
  expires: "expires",
} as const;

export type CognitoCustom2FAScalarFieldEnum =
  (typeof CognitoCustom2FAScalarFieldEnum)[keyof typeof CognitoCustom2FAScalarFieldEnum];

export const SecurityQuestionScalarFieldEnum = {
  id: "id",
  questionEn: "questionEn",
  questionFr: "questionFr",
  deprecated: "deprecated",
} as const;

export type SecurityQuestionScalarFieldEnum =
  (typeof SecurityQuestionScalarFieldEnum)[keyof typeof SecurityQuestionScalarFieldEnum];

export const SecurityAnswerScalarFieldEnum = {
  id: "id",
  answer: "answer",
  userId: "userId",
  securityQuestionId: "securityQuestionId",
} as const;

export type SecurityAnswerScalarFieldEnum =
  (typeof SecurityAnswerScalarFieldEnum)[keyof typeof SecurityAnswerScalarFieldEnum];

export const MagicLinkScalarFieldEnum = {
  identifier: "identifier",
  token: "token",
  expires: "expires",
} as const;

export type MagicLinkScalarFieldEnum =
  (typeof MagicLinkScalarFieldEnum)[keyof typeof MagicLinkScalarFieldEnum];

export const InvitationScalarFieldEnum = {
  id: "id",
  email: "email",
  expires: "expires",
  templateId: "templateId",
  invitedBy: "invitedBy",
} as const;

export type InvitationScalarFieldEnum =
  (typeof InvitationScalarFieldEnum)[keyof typeof InvitationScalarFieldEnum];

export const UserFeatureScalarFieldEnum = {
  id: "id",
  userId: "userId",
  feature: "feature",
} as const;

export type UserFeatureScalarFieldEnum =
  (typeof UserFeatureScalarFieldEnum)[keyof typeof UserFeatureScalarFieldEnum];

export const SortOrder = {
  asc: "asc",
  desc: "desc",
} as const;

export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder];

export const JsonNullValueInput = {
  JsonNull: JsonNull,
} as const;

export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput];

export const NullableJsonNullValueInput = {
  DbNull: DbNull,
  JsonNull: JsonNull,
} as const;

export type NullableJsonNullValueInput =
  (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput];

export const QueryMode = {
  default: "default",
  insensitive: "insensitive",
} as const;

export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode];

export const NullsOrder = {
  first: "first",
  last: "last",
} as const;

export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder];

export const JsonNullValueFilter = {
  DbNull: DbNull,
  JsonNull: JsonNull,
  AnyNull: AnyNull,
} as const;

export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter];
