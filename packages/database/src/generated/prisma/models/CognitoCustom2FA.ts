/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `CognitoCustom2FA` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";
import type * as $Enums from "../enums.js";
import type * as Prisma from "../internal/prismaNamespace.js";

/**
 * Model CognitoCustom2FA
 *
 */
export type CognitoCustom2FAModel =
  runtime.Types.Result.DefaultSelection<Prisma.$CognitoCustom2FAPayload>;

export type AggregateCognitoCustom2FA = {
  _count: CognitoCustom2FACountAggregateOutputType | null;
  _min: CognitoCustom2FAMinAggregateOutputType | null;
  _max: CognitoCustom2FAMaxAggregateOutputType | null;
};

export type CognitoCustom2FAMinAggregateOutputType = {
  id: string | null;
  email: string | null;
  cognitoToken: string | null;
  verificationCode: string | null;
  expires: Date | null;
};

export type CognitoCustom2FAMaxAggregateOutputType = {
  id: string | null;
  email: string | null;
  cognitoToken: string | null;
  verificationCode: string | null;
  expires: Date | null;
};

export type CognitoCustom2FACountAggregateOutputType = {
  id: number;
  email: number;
  cognitoToken: number;
  verificationCode: number;
  expires: number;
  _all: number;
};

export type CognitoCustom2FAMinAggregateInputType = {
  id?: true;
  email?: true;
  cognitoToken?: true;
  verificationCode?: true;
  expires?: true;
};

export type CognitoCustom2FAMaxAggregateInputType = {
  id?: true;
  email?: true;
  cognitoToken?: true;
  verificationCode?: true;
  expires?: true;
};

export type CognitoCustom2FACountAggregateInputType = {
  id?: true;
  email?: true;
  cognitoToken?: true;
  verificationCode?: true;
  expires?: true;
  _all?: true;
};

export type CognitoCustom2FAAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which CognitoCustom2FA to aggregate.
   */
  where?: Prisma.CognitoCustom2FAWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of CognitoCustom2FAS to fetch.
   */
  orderBy?:
    | Prisma.CognitoCustom2FAOrderByWithRelationInput
    | Prisma.CognitoCustom2FAOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.CognitoCustom2FAWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` CognitoCustom2FAS from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` CognitoCustom2FAS.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned CognitoCustom2FAS
   **/
  _count?: true | CognitoCustom2FACountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: CognitoCustom2FAMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: CognitoCustom2FAMaxAggregateInputType;
};

export type GetCognitoCustom2FAAggregateType<T extends CognitoCustom2FAAggregateArgs> = {
  [P in keyof T & keyof AggregateCognitoCustom2FA]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateCognitoCustom2FA[P]>
    : Prisma.GetScalarType<T[P], AggregateCognitoCustom2FA[P]>;
};

export type CognitoCustom2FAGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.CognitoCustom2FAWhereInput;
  orderBy?:
    | Prisma.CognitoCustom2FAOrderByWithAggregationInput
    | Prisma.CognitoCustom2FAOrderByWithAggregationInput[];
  by: Prisma.CognitoCustom2FAScalarFieldEnum[] | Prisma.CognitoCustom2FAScalarFieldEnum;
  having?: Prisma.CognitoCustom2FAScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: CognitoCustom2FACountAggregateInputType | true;
  _min?: CognitoCustom2FAMinAggregateInputType;
  _max?: CognitoCustom2FAMaxAggregateInputType;
};

export type CognitoCustom2FAGroupByOutputType = {
  id: string;
  email: string;
  cognitoToken: string;
  verificationCode: string;
  expires: Date;
  _count: CognitoCustom2FACountAggregateOutputType | null;
  _min: CognitoCustom2FAMinAggregateOutputType | null;
  _max: CognitoCustom2FAMaxAggregateOutputType | null;
};

type GetCognitoCustom2FAGroupByPayload<T extends CognitoCustom2FAGroupByArgs> =
  Prisma.PrismaPromise<
    Array<
      Prisma.PickEnumerable<CognitoCustom2FAGroupByOutputType, T["by"]> & {
        [P in keyof T & keyof CognitoCustom2FAGroupByOutputType]: P extends "_count"
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], CognitoCustom2FAGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], CognitoCustom2FAGroupByOutputType[P]>;
      }
    >
  >;

export type CognitoCustom2FAWhereInput = {
  AND?: Prisma.CognitoCustom2FAWhereInput | Prisma.CognitoCustom2FAWhereInput[];
  OR?: Prisma.CognitoCustom2FAWhereInput[];
  NOT?: Prisma.CognitoCustom2FAWhereInput | Prisma.CognitoCustom2FAWhereInput[];
  id?: Prisma.StringFilter<"CognitoCustom2FA"> | string;
  email?: Prisma.StringFilter<"CognitoCustom2FA"> | string;
  cognitoToken?: Prisma.StringFilter<"CognitoCustom2FA"> | string;
  verificationCode?: Prisma.StringFilter<"CognitoCustom2FA"> | string;
  expires?: Prisma.DateTimeFilter<"CognitoCustom2FA"> | Date | string;
};

export type CognitoCustom2FAOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  cognitoToken?: Prisma.SortOrder;
  verificationCode?: Prisma.SortOrder;
  expires?: Prisma.SortOrder;
};

export type CognitoCustom2FAWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    email?: string;
    verificationCode?: string;
    id_email?: Prisma.CognitoCustom2FAIdEmailCompoundUniqueInput;
    AND?: Prisma.CognitoCustom2FAWhereInput | Prisma.CognitoCustom2FAWhereInput[];
    OR?: Prisma.CognitoCustom2FAWhereInput[];
    NOT?: Prisma.CognitoCustom2FAWhereInput | Prisma.CognitoCustom2FAWhereInput[];
    cognitoToken?: Prisma.StringFilter<"CognitoCustom2FA"> | string;
    expires?: Prisma.DateTimeFilter<"CognitoCustom2FA"> | Date | string;
  },
  "id" | "email" | "verificationCode" | "id_email"
>;

export type CognitoCustom2FAOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  cognitoToken?: Prisma.SortOrder;
  verificationCode?: Prisma.SortOrder;
  expires?: Prisma.SortOrder;
  _count?: Prisma.CognitoCustom2FACountOrderByAggregateInput;
  _max?: Prisma.CognitoCustom2FAMaxOrderByAggregateInput;
  _min?: Prisma.CognitoCustom2FAMinOrderByAggregateInput;
};

export type CognitoCustom2FAScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.CognitoCustom2FAScalarWhereWithAggregatesInput
    | Prisma.CognitoCustom2FAScalarWhereWithAggregatesInput[];
  OR?: Prisma.CognitoCustom2FAScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.CognitoCustom2FAScalarWhereWithAggregatesInput
    | Prisma.CognitoCustom2FAScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"CognitoCustom2FA"> | string;
  email?: Prisma.StringWithAggregatesFilter<"CognitoCustom2FA"> | string;
  cognitoToken?: Prisma.StringWithAggregatesFilter<"CognitoCustom2FA"> | string;
  verificationCode?: Prisma.StringWithAggregatesFilter<"CognitoCustom2FA"> | string;
  expires?: Prisma.DateTimeWithAggregatesFilter<"CognitoCustom2FA"> | Date | string;
};

export type CognitoCustom2FACreateInput = {
  id?: string;
  email: string;
  cognitoToken: string;
  verificationCode: string;
  expires: Date | string;
};

export type CognitoCustom2FAUncheckedCreateInput = {
  id?: string;
  email: string;
  cognitoToken: string;
  verificationCode: string;
  expires: Date | string;
};

export type CognitoCustom2FAUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  cognitoToken?: Prisma.StringFieldUpdateOperationsInput | string;
  verificationCode?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CognitoCustom2FAUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  cognitoToken?: Prisma.StringFieldUpdateOperationsInput | string;
  verificationCode?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CognitoCustom2FACreateManyInput = {
  id?: string;
  email: string;
  cognitoToken: string;
  verificationCode: string;
  expires: Date | string;
};

export type CognitoCustom2FAUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  cognitoToken?: Prisma.StringFieldUpdateOperationsInput | string;
  verificationCode?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CognitoCustom2FAUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  email?: Prisma.StringFieldUpdateOperationsInput | string;
  cognitoToken?: Prisma.StringFieldUpdateOperationsInput | string;
  verificationCode?: Prisma.StringFieldUpdateOperationsInput | string;
  expires?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CognitoCustom2FAIdEmailCompoundUniqueInput = {
  id: string;
  email: string;
};

export type CognitoCustom2FACountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  cognitoToken?: Prisma.SortOrder;
  verificationCode?: Prisma.SortOrder;
  expires?: Prisma.SortOrder;
};

export type CognitoCustom2FAMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  cognitoToken?: Prisma.SortOrder;
  verificationCode?: Prisma.SortOrder;
  expires?: Prisma.SortOrder;
};

export type CognitoCustom2FAMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  email?: Prisma.SortOrder;
  cognitoToken?: Prisma.SortOrder;
  verificationCode?: Prisma.SortOrder;
  expires?: Prisma.SortOrder;
};

export type CognitoCustom2FASelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    email?: boolean;
    cognitoToken?: boolean;
    verificationCode?: boolean;
    expires?: boolean;
  },
  ExtArgs["result"]["cognitoCustom2FA"]
>;

export type CognitoCustom2FASelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    email?: boolean;
    cognitoToken?: boolean;
    verificationCode?: boolean;
    expires?: boolean;
  },
  ExtArgs["result"]["cognitoCustom2FA"]
>;

export type CognitoCustom2FASelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    email?: boolean;
    cognitoToken?: boolean;
    verificationCode?: boolean;
    expires?: boolean;
  },
  ExtArgs["result"]["cognitoCustom2FA"]
>;

export type CognitoCustom2FASelectScalar = {
  id?: boolean;
  email?: boolean;
  cognitoToken?: boolean;
  verificationCode?: boolean;
  expires?: boolean;
};

export type CognitoCustom2FAOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  "id" | "email" | "cognitoToken" | "verificationCode" | "expires",
  ExtArgs["result"]["cognitoCustom2FA"]
>;

export type $CognitoCustom2FAPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "CognitoCustom2FA";
  objects: {};
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      email: string;
      cognitoToken: string;
      verificationCode: string;
      expires: Date;
    },
    ExtArgs["result"]["cognitoCustom2FA"]
  >;
  composites: {};
};

export type CognitoCustom2FAGetPayload<
  S extends boolean | null | undefined | CognitoCustom2FADefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$CognitoCustom2FAPayload, S>;

export type CognitoCustom2FACountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<CognitoCustom2FAFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: CognitoCustom2FACountAggregateInputType | true;
};

export interface CognitoCustom2FADelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["CognitoCustom2FA"];
    meta: { name: "CognitoCustom2FA" };
  };
  /**
   * Find zero or one CognitoCustom2FA that matches the filter.
   * @param {CognitoCustom2FAFindUniqueArgs} args - Arguments to find a CognitoCustom2FA
   * @example
   * // Get one CognitoCustom2FA
   * const cognitoCustom2FA = await prisma.cognitoCustom2FA.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends CognitoCustom2FAFindUniqueArgs>(
    args: Prisma.SelectSubset<T, CognitoCustom2FAFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__CognitoCustom2FAClient<
    runtime.Types.Result.GetResult<
      Prisma.$CognitoCustom2FAPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one CognitoCustom2FA that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {CognitoCustom2FAFindUniqueOrThrowArgs} args - Arguments to find a CognitoCustom2FA
   * @example
   * // Get one CognitoCustom2FA
   * const cognitoCustom2FA = await prisma.cognitoCustom2FA.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends CognitoCustom2FAFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, CognitoCustom2FAFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__CognitoCustom2FAClient<
    runtime.Types.Result.GetResult<
      Prisma.$CognitoCustom2FAPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first CognitoCustom2FA that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CognitoCustom2FAFindFirstArgs} args - Arguments to find a CognitoCustom2FA
   * @example
   * // Get one CognitoCustom2FA
   * const cognitoCustom2FA = await prisma.cognitoCustom2FA.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends CognitoCustom2FAFindFirstArgs>(
    args?: Prisma.SelectSubset<T, CognitoCustom2FAFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__CognitoCustom2FAClient<
    runtime.Types.Result.GetResult<
      Prisma.$CognitoCustom2FAPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first CognitoCustom2FA that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CognitoCustom2FAFindFirstOrThrowArgs} args - Arguments to find a CognitoCustom2FA
   * @example
   * // Get one CognitoCustom2FA
   * const cognitoCustom2FA = await prisma.cognitoCustom2FA.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends CognitoCustom2FAFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, CognitoCustom2FAFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__CognitoCustom2FAClient<
    runtime.Types.Result.GetResult<
      Prisma.$CognitoCustom2FAPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more CognitoCustom2FAS that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CognitoCustom2FAFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all CognitoCustom2FAS
   * const cognitoCustom2FAS = await prisma.cognitoCustom2FA.findMany()
   *
   * // Get first 10 CognitoCustom2FAS
   * const cognitoCustom2FAS = await prisma.cognitoCustom2FA.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const cognitoCustom2FAWithIdOnly = await prisma.cognitoCustom2FA.findMany({ select: { id: true } })
   *
   */
  findMany<T extends CognitoCustom2FAFindManyArgs>(
    args?: Prisma.SelectSubset<T, CognitoCustom2FAFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$CognitoCustom2FAPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a CognitoCustom2FA.
   * @param {CognitoCustom2FACreateArgs} args - Arguments to create a CognitoCustom2FA.
   * @example
   * // Create one CognitoCustom2FA
   * const CognitoCustom2FA = await prisma.cognitoCustom2FA.create({
   *   data: {
   *     // ... data to create a CognitoCustom2FA
   *   }
   * })
   *
   */
  create<T extends CognitoCustom2FACreateArgs>(
    args: Prisma.SelectSubset<T, CognitoCustom2FACreateArgs<ExtArgs>>
  ): Prisma.Prisma__CognitoCustom2FAClient<
    runtime.Types.Result.GetResult<
      Prisma.$CognitoCustom2FAPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many CognitoCustom2FAS.
   * @param {CognitoCustom2FACreateManyArgs} args - Arguments to create many CognitoCustom2FAS.
   * @example
   * // Create many CognitoCustom2FAS
   * const cognitoCustom2FA = await prisma.cognitoCustom2FA.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends CognitoCustom2FACreateManyArgs>(
    args?: Prisma.SelectSubset<T, CognitoCustom2FACreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many CognitoCustom2FAS and returns the data saved in the database.
   * @param {CognitoCustom2FACreateManyAndReturnArgs} args - Arguments to create many CognitoCustom2FAS.
   * @example
   * // Create many CognitoCustom2FAS
   * const cognitoCustom2FA = await prisma.cognitoCustom2FA.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many CognitoCustom2FAS and only return the `id`
   * const cognitoCustom2FAWithIdOnly = await prisma.cognitoCustom2FA.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends CognitoCustom2FACreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, CognitoCustom2FACreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$CognitoCustom2FAPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a CognitoCustom2FA.
   * @param {CognitoCustom2FADeleteArgs} args - Arguments to delete one CognitoCustom2FA.
   * @example
   * // Delete one CognitoCustom2FA
   * const CognitoCustom2FA = await prisma.cognitoCustom2FA.delete({
   *   where: {
   *     // ... filter to delete one CognitoCustom2FA
   *   }
   * })
   *
   */
  delete<T extends CognitoCustom2FADeleteArgs>(
    args: Prisma.SelectSubset<T, CognitoCustom2FADeleteArgs<ExtArgs>>
  ): Prisma.Prisma__CognitoCustom2FAClient<
    runtime.Types.Result.GetResult<
      Prisma.$CognitoCustom2FAPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one CognitoCustom2FA.
   * @param {CognitoCustom2FAUpdateArgs} args - Arguments to update one CognitoCustom2FA.
   * @example
   * // Update one CognitoCustom2FA
   * const cognitoCustom2FA = await prisma.cognitoCustom2FA.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends CognitoCustom2FAUpdateArgs>(
    args: Prisma.SelectSubset<T, CognitoCustom2FAUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__CognitoCustom2FAClient<
    runtime.Types.Result.GetResult<
      Prisma.$CognitoCustom2FAPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more CognitoCustom2FAS.
   * @param {CognitoCustom2FADeleteManyArgs} args - Arguments to filter CognitoCustom2FAS to delete.
   * @example
   * // Delete a few CognitoCustom2FAS
   * const { count } = await prisma.cognitoCustom2FA.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends CognitoCustom2FADeleteManyArgs>(
    args?: Prisma.SelectSubset<T, CognitoCustom2FADeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more CognitoCustom2FAS.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CognitoCustom2FAUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many CognitoCustom2FAS
   * const cognitoCustom2FA = await prisma.cognitoCustom2FA.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends CognitoCustom2FAUpdateManyArgs>(
    args: Prisma.SelectSubset<T, CognitoCustom2FAUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more CognitoCustom2FAS and returns the data updated in the database.
   * @param {CognitoCustom2FAUpdateManyAndReturnArgs} args - Arguments to update many CognitoCustom2FAS.
   * @example
   * // Update many CognitoCustom2FAS
   * const cognitoCustom2FA = await prisma.cognitoCustom2FA.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more CognitoCustom2FAS and only return the `id`
   * const cognitoCustom2FAWithIdOnly = await prisma.cognitoCustom2FA.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends CognitoCustom2FAUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, CognitoCustom2FAUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$CognitoCustom2FAPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one CognitoCustom2FA.
   * @param {CognitoCustom2FAUpsertArgs} args - Arguments to update or create a CognitoCustom2FA.
   * @example
   * // Update or create a CognitoCustom2FA
   * const cognitoCustom2FA = await prisma.cognitoCustom2FA.upsert({
   *   create: {
   *     // ... data to create a CognitoCustom2FA
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the CognitoCustom2FA we want to update
   *   }
   * })
   */
  upsert<T extends CognitoCustom2FAUpsertArgs>(
    args: Prisma.SelectSubset<T, CognitoCustom2FAUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__CognitoCustom2FAClient<
    runtime.Types.Result.GetResult<
      Prisma.$CognitoCustom2FAPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of CognitoCustom2FAS.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CognitoCustom2FACountArgs} args - Arguments to filter CognitoCustom2FAS to count.
   * @example
   * // Count the number of CognitoCustom2FAS
   * const count = await prisma.cognitoCustom2FA.count({
   *   where: {
   *     // ... the filter for the CognitoCustom2FAS we want to count
   *   }
   * })
   **/
  count<T extends CognitoCustom2FACountArgs>(
    args?: Prisma.Subset<T, CognitoCustom2FACountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], CognitoCustom2FACountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a CognitoCustom2FA.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CognitoCustom2FAAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends CognitoCustom2FAAggregateArgs>(
    args: Prisma.Subset<T, CognitoCustom2FAAggregateArgs>
  ): Prisma.PrismaPromise<GetCognitoCustom2FAAggregateType<T>>;

  /**
   * Group by CognitoCustom2FA.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CognitoCustom2FAGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends CognitoCustom2FAGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: CognitoCustom2FAGroupByArgs["orderBy"] }
      : { orderBy?: CognitoCustom2FAGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, CognitoCustom2FAGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors
    ? GetCognitoCustom2FAGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the CognitoCustom2FA model
   */
  readonly fields: CognitoCustom2FAFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for CognitoCustom2FA.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__CognitoCustom2FAClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the CognitoCustom2FA model
 */
export interface CognitoCustom2FAFieldRefs {
  readonly id: Prisma.FieldRef<"CognitoCustom2FA", "String">;
  readonly email: Prisma.FieldRef<"CognitoCustom2FA", "String">;
  readonly cognitoToken: Prisma.FieldRef<"CognitoCustom2FA", "String">;
  readonly verificationCode: Prisma.FieldRef<"CognitoCustom2FA", "String">;
  readonly expires: Prisma.FieldRef<"CognitoCustom2FA", "DateTime">;
}

// Custom InputTypes
/**
 * CognitoCustom2FA findUnique
 */
export type CognitoCustom2FAFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CognitoCustom2FA
   */
  select?: Prisma.CognitoCustom2FASelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CognitoCustom2FA
   */
  omit?: Prisma.CognitoCustom2FAOmit<ExtArgs> | null;
  /**
   * Filter, which CognitoCustom2FA to fetch.
   */
  where: Prisma.CognitoCustom2FAWhereUniqueInput;
};

/**
 * CognitoCustom2FA findUniqueOrThrow
 */
export type CognitoCustom2FAFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CognitoCustom2FA
   */
  select?: Prisma.CognitoCustom2FASelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CognitoCustom2FA
   */
  omit?: Prisma.CognitoCustom2FAOmit<ExtArgs> | null;
  /**
   * Filter, which CognitoCustom2FA to fetch.
   */
  where: Prisma.CognitoCustom2FAWhereUniqueInput;
};

/**
 * CognitoCustom2FA findFirst
 */
export type CognitoCustom2FAFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CognitoCustom2FA
   */
  select?: Prisma.CognitoCustom2FASelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CognitoCustom2FA
   */
  omit?: Prisma.CognitoCustom2FAOmit<ExtArgs> | null;
  /**
   * Filter, which CognitoCustom2FA to fetch.
   */
  where?: Prisma.CognitoCustom2FAWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of CognitoCustom2FAS to fetch.
   */
  orderBy?:
    | Prisma.CognitoCustom2FAOrderByWithRelationInput
    | Prisma.CognitoCustom2FAOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for CognitoCustom2FAS.
   */
  cursor?: Prisma.CognitoCustom2FAWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` CognitoCustom2FAS from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` CognitoCustom2FAS.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of CognitoCustom2FAS.
   */
  distinct?: Prisma.CognitoCustom2FAScalarFieldEnum | Prisma.CognitoCustom2FAScalarFieldEnum[];
};

/**
 * CognitoCustom2FA findFirstOrThrow
 */
export type CognitoCustom2FAFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CognitoCustom2FA
   */
  select?: Prisma.CognitoCustom2FASelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CognitoCustom2FA
   */
  omit?: Prisma.CognitoCustom2FAOmit<ExtArgs> | null;
  /**
   * Filter, which CognitoCustom2FA to fetch.
   */
  where?: Prisma.CognitoCustom2FAWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of CognitoCustom2FAS to fetch.
   */
  orderBy?:
    | Prisma.CognitoCustom2FAOrderByWithRelationInput
    | Prisma.CognitoCustom2FAOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for CognitoCustom2FAS.
   */
  cursor?: Prisma.CognitoCustom2FAWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` CognitoCustom2FAS from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` CognitoCustom2FAS.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of CognitoCustom2FAS.
   */
  distinct?: Prisma.CognitoCustom2FAScalarFieldEnum | Prisma.CognitoCustom2FAScalarFieldEnum[];
};

/**
 * CognitoCustom2FA findMany
 */
export type CognitoCustom2FAFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CognitoCustom2FA
   */
  select?: Prisma.CognitoCustom2FASelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CognitoCustom2FA
   */
  omit?: Prisma.CognitoCustom2FAOmit<ExtArgs> | null;
  /**
   * Filter, which CognitoCustom2FAS to fetch.
   */
  where?: Prisma.CognitoCustom2FAWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of CognitoCustom2FAS to fetch.
   */
  orderBy?:
    | Prisma.CognitoCustom2FAOrderByWithRelationInput
    | Prisma.CognitoCustom2FAOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing CognitoCustom2FAS.
   */
  cursor?: Prisma.CognitoCustom2FAWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` CognitoCustom2FAS from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` CognitoCustom2FAS.
   */
  skip?: number;
  distinct?: Prisma.CognitoCustom2FAScalarFieldEnum | Prisma.CognitoCustom2FAScalarFieldEnum[];
};

/**
 * CognitoCustom2FA create
 */
export type CognitoCustom2FACreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CognitoCustom2FA
   */
  select?: Prisma.CognitoCustom2FASelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CognitoCustom2FA
   */
  omit?: Prisma.CognitoCustom2FAOmit<ExtArgs> | null;
  /**
   * The data needed to create a CognitoCustom2FA.
   */
  data: Prisma.XOR<Prisma.CognitoCustom2FACreateInput, Prisma.CognitoCustom2FAUncheckedCreateInput>;
};

/**
 * CognitoCustom2FA createMany
 */
export type CognitoCustom2FACreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many CognitoCustom2FAS.
   */
  data: Prisma.CognitoCustom2FACreateManyInput | Prisma.CognitoCustom2FACreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * CognitoCustom2FA createManyAndReturn
 */
export type CognitoCustom2FACreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CognitoCustom2FA
   */
  select?: Prisma.CognitoCustom2FASelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the CognitoCustom2FA
   */
  omit?: Prisma.CognitoCustom2FAOmit<ExtArgs> | null;
  /**
   * The data used to create many CognitoCustom2FAS.
   */
  data: Prisma.CognitoCustom2FACreateManyInput | Prisma.CognitoCustom2FACreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * CognitoCustom2FA update
 */
export type CognitoCustom2FAUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CognitoCustom2FA
   */
  select?: Prisma.CognitoCustom2FASelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CognitoCustom2FA
   */
  omit?: Prisma.CognitoCustom2FAOmit<ExtArgs> | null;
  /**
   * The data needed to update a CognitoCustom2FA.
   */
  data: Prisma.XOR<Prisma.CognitoCustom2FAUpdateInput, Prisma.CognitoCustom2FAUncheckedUpdateInput>;
  /**
   * Choose, which CognitoCustom2FA to update.
   */
  where: Prisma.CognitoCustom2FAWhereUniqueInput;
};

/**
 * CognitoCustom2FA updateMany
 */
export type CognitoCustom2FAUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update CognitoCustom2FAS.
   */
  data: Prisma.XOR<
    Prisma.CognitoCustom2FAUpdateManyMutationInput,
    Prisma.CognitoCustom2FAUncheckedUpdateManyInput
  >;
  /**
   * Filter which CognitoCustom2FAS to update
   */
  where?: Prisma.CognitoCustom2FAWhereInput;
  /**
   * Limit how many CognitoCustom2FAS to update.
   */
  limit?: number;
};

/**
 * CognitoCustom2FA updateManyAndReturn
 */
export type CognitoCustom2FAUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CognitoCustom2FA
   */
  select?: Prisma.CognitoCustom2FASelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the CognitoCustom2FA
   */
  omit?: Prisma.CognitoCustom2FAOmit<ExtArgs> | null;
  /**
   * The data used to update CognitoCustom2FAS.
   */
  data: Prisma.XOR<
    Prisma.CognitoCustom2FAUpdateManyMutationInput,
    Prisma.CognitoCustom2FAUncheckedUpdateManyInput
  >;
  /**
   * Filter which CognitoCustom2FAS to update
   */
  where?: Prisma.CognitoCustom2FAWhereInput;
  /**
   * Limit how many CognitoCustom2FAS to update.
   */
  limit?: number;
};

/**
 * CognitoCustom2FA upsert
 */
export type CognitoCustom2FAUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CognitoCustom2FA
   */
  select?: Prisma.CognitoCustom2FASelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CognitoCustom2FA
   */
  omit?: Prisma.CognitoCustom2FAOmit<ExtArgs> | null;
  /**
   * The filter to search for the CognitoCustom2FA to update in case it exists.
   */
  where: Prisma.CognitoCustom2FAWhereUniqueInput;
  /**
   * In case the CognitoCustom2FA found by the `where` argument doesn't exist, create a new CognitoCustom2FA with this data.
   */
  create: Prisma.XOR<
    Prisma.CognitoCustom2FACreateInput,
    Prisma.CognitoCustom2FAUncheckedCreateInput
  >;
  /**
   * In case the CognitoCustom2FA was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<
    Prisma.CognitoCustom2FAUpdateInput,
    Prisma.CognitoCustom2FAUncheckedUpdateInput
  >;
};

/**
 * CognitoCustom2FA delete
 */
export type CognitoCustom2FADeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CognitoCustom2FA
   */
  select?: Prisma.CognitoCustom2FASelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CognitoCustom2FA
   */
  omit?: Prisma.CognitoCustom2FAOmit<ExtArgs> | null;
  /**
   * Filter which CognitoCustom2FA to delete.
   */
  where: Prisma.CognitoCustom2FAWhereUniqueInput;
};

/**
 * CognitoCustom2FA deleteMany
 */
export type CognitoCustom2FADeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which CognitoCustom2FAS to delete
   */
  where?: Prisma.CognitoCustom2FAWhereInput;
  /**
   * Limit how many CognitoCustom2FAS to delete.
   */
  limit?: number;
};

/**
 * CognitoCustom2FA without action
 */
export type CognitoCustom2FADefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the CognitoCustom2FA
   */
  select?: Prisma.CognitoCustom2FASelect<ExtArgs> | null;
  /**
   * Omit specific fields from the CognitoCustom2FA
   */
  omit?: Prisma.CognitoCustom2FAOmit<ExtArgs> | null;
};
