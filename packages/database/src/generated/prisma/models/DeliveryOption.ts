/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/*
 * This file exports the `DeliveryOption` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/client";
import type * as $Enums from "../enums.js";
import type * as Prisma from "../internal/prismaNamespace.js";

/**
 * Model DeliveryOption
 *
 */
export type DeliveryOptionModel =
  runtime.Types.Result.DefaultSelection<Prisma.$DeliveryOptionPayload>;

export type AggregateDeliveryOption = {
  _count: DeliveryOptionCountAggregateOutputType | null;
  _min: DeliveryOptionMinAggregateOutputType | null;
  _max: DeliveryOptionMaxAggregateOutputType | null;
};

export type DeliveryOptionMinAggregateOutputType = {
  id: string | null;
  emailAddress: string | null;
  emailSubjectEn: string | null;
  emailSubjectFr: string | null;
  templateId: string | null;
};

export type DeliveryOptionMaxAggregateOutputType = {
  id: string | null;
  emailAddress: string | null;
  emailSubjectEn: string | null;
  emailSubjectFr: string | null;
  templateId: string | null;
};

export type DeliveryOptionCountAggregateOutputType = {
  id: number;
  emailAddress: number;
  emailSubjectEn: number;
  emailSubjectFr: number;
  templateId: number;
  _all: number;
};

export type DeliveryOptionMinAggregateInputType = {
  id?: true;
  emailAddress?: true;
  emailSubjectEn?: true;
  emailSubjectFr?: true;
  templateId?: true;
};

export type DeliveryOptionMaxAggregateInputType = {
  id?: true;
  emailAddress?: true;
  emailSubjectEn?: true;
  emailSubjectFr?: true;
  templateId?: true;
};

export type DeliveryOptionCountAggregateInputType = {
  id?: true;
  emailAddress?: true;
  emailSubjectEn?: true;
  emailSubjectFr?: true;
  templateId?: true;
  _all?: true;
};

export type DeliveryOptionAggregateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which DeliveryOption to aggregate.
   */
  where?: Prisma.DeliveryOptionWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of DeliveryOptions to fetch.
   */
  orderBy?:
    | Prisma.DeliveryOptionOrderByWithRelationInput
    | Prisma.DeliveryOptionOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the start position
   */
  cursor?: Prisma.DeliveryOptionWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` DeliveryOptions from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` DeliveryOptions.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Count returned DeliveryOptions
   **/
  _count?: true | DeliveryOptionCountAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the minimum value
   **/
  _min?: DeliveryOptionMinAggregateInputType;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   *
   * Select which fields to find the maximum value
   **/
  _max?: DeliveryOptionMaxAggregateInputType;
};

export type GetDeliveryOptionAggregateType<T extends DeliveryOptionAggregateArgs> = {
  [P in keyof T & keyof AggregateDeliveryOption]: P extends "_count" | "count"
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateDeliveryOption[P]>
    : Prisma.GetScalarType<T[P], AggregateDeliveryOption[P]>;
};

export type DeliveryOptionGroupByArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  where?: Prisma.DeliveryOptionWhereInput;
  orderBy?:
    | Prisma.DeliveryOptionOrderByWithAggregationInput
    | Prisma.DeliveryOptionOrderByWithAggregationInput[];
  by: Prisma.DeliveryOptionScalarFieldEnum[] | Prisma.DeliveryOptionScalarFieldEnum;
  having?: Prisma.DeliveryOptionScalarWhereWithAggregatesInput;
  take?: number;
  skip?: number;
  _count?: DeliveryOptionCountAggregateInputType | true;
  _min?: DeliveryOptionMinAggregateInputType;
  _max?: DeliveryOptionMaxAggregateInputType;
};

export type DeliveryOptionGroupByOutputType = {
  id: string;
  emailAddress: string;
  emailSubjectEn: string | null;
  emailSubjectFr: string | null;
  templateId: string;
  _count: DeliveryOptionCountAggregateOutputType | null;
  _min: DeliveryOptionMinAggregateOutputType | null;
  _max: DeliveryOptionMaxAggregateOutputType | null;
};

type GetDeliveryOptionGroupByPayload<T extends DeliveryOptionGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<DeliveryOptionGroupByOutputType, T["by"]> & {
      [P in keyof T & keyof DeliveryOptionGroupByOutputType]: P extends "_count"
        ? T[P] extends boolean
          ? number
          : Prisma.GetScalarType<T[P], DeliveryOptionGroupByOutputType[P]>
        : Prisma.GetScalarType<T[P], DeliveryOptionGroupByOutputType[P]>;
    }
  >
>;

export type DeliveryOptionWhereInput = {
  AND?: Prisma.DeliveryOptionWhereInput | Prisma.DeliveryOptionWhereInput[];
  OR?: Prisma.DeliveryOptionWhereInput[];
  NOT?: Prisma.DeliveryOptionWhereInput | Prisma.DeliveryOptionWhereInput[];
  id?: Prisma.StringFilter<"DeliveryOption"> | string;
  emailAddress?: Prisma.StringFilter<"DeliveryOption"> | string;
  emailSubjectEn?: Prisma.StringNullableFilter<"DeliveryOption"> | string | null;
  emailSubjectFr?: Prisma.StringNullableFilter<"DeliveryOption"> | string | null;
  templateId?: Prisma.StringFilter<"DeliveryOption"> | string;
  template?: Prisma.XOR<Prisma.TemplateScalarRelationFilter, Prisma.TemplateWhereInput>;
};

export type DeliveryOptionOrderByWithRelationInput = {
  id?: Prisma.SortOrder;
  emailAddress?: Prisma.SortOrder;
  emailSubjectEn?: Prisma.SortOrderInput | Prisma.SortOrder;
  emailSubjectFr?: Prisma.SortOrderInput | Prisma.SortOrder;
  templateId?: Prisma.SortOrder;
  template?: Prisma.TemplateOrderByWithRelationInput;
};

export type DeliveryOptionWhereUniqueInput = Prisma.AtLeast<
  {
    id?: string;
    templateId?: string;
    AND?: Prisma.DeliveryOptionWhereInput | Prisma.DeliveryOptionWhereInput[];
    OR?: Prisma.DeliveryOptionWhereInput[];
    NOT?: Prisma.DeliveryOptionWhereInput | Prisma.DeliveryOptionWhereInput[];
    emailAddress?: Prisma.StringFilter<"DeliveryOption"> | string;
    emailSubjectEn?: Prisma.StringNullableFilter<"DeliveryOption"> | string | null;
    emailSubjectFr?: Prisma.StringNullableFilter<"DeliveryOption"> | string | null;
    template?: Prisma.XOR<Prisma.TemplateScalarRelationFilter, Prisma.TemplateWhereInput>;
  },
  "id" | "templateId"
>;

export type DeliveryOptionOrderByWithAggregationInput = {
  id?: Prisma.SortOrder;
  emailAddress?: Prisma.SortOrder;
  emailSubjectEn?: Prisma.SortOrderInput | Prisma.SortOrder;
  emailSubjectFr?: Prisma.SortOrderInput | Prisma.SortOrder;
  templateId?: Prisma.SortOrder;
  _count?: Prisma.DeliveryOptionCountOrderByAggregateInput;
  _max?: Prisma.DeliveryOptionMaxOrderByAggregateInput;
  _min?: Prisma.DeliveryOptionMinOrderByAggregateInput;
};

export type DeliveryOptionScalarWhereWithAggregatesInput = {
  AND?:
    | Prisma.DeliveryOptionScalarWhereWithAggregatesInput
    | Prisma.DeliveryOptionScalarWhereWithAggregatesInput[];
  OR?: Prisma.DeliveryOptionScalarWhereWithAggregatesInput[];
  NOT?:
    | Prisma.DeliveryOptionScalarWhereWithAggregatesInput
    | Prisma.DeliveryOptionScalarWhereWithAggregatesInput[];
  id?: Prisma.StringWithAggregatesFilter<"DeliveryOption"> | string;
  emailAddress?: Prisma.StringWithAggregatesFilter<"DeliveryOption"> | string;
  emailSubjectEn?: Prisma.StringNullableWithAggregatesFilter<"DeliveryOption"> | string | null;
  emailSubjectFr?: Prisma.StringNullableWithAggregatesFilter<"DeliveryOption"> | string | null;
  templateId?: Prisma.StringWithAggregatesFilter<"DeliveryOption"> | string;
};

export type DeliveryOptionCreateInput = {
  id?: string;
  emailAddress: string;
  emailSubjectEn?: string | null;
  emailSubjectFr?: string | null;
  template: Prisma.TemplateCreateNestedOneWithoutDeliveryOptionInput;
};

export type DeliveryOptionUncheckedCreateInput = {
  id?: string;
  emailAddress: string;
  emailSubjectEn?: string | null;
  emailSubjectFr?: string | null;
  templateId: string;
};

export type DeliveryOptionUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  emailAddress?: Prisma.StringFieldUpdateOperationsInput | string;
  emailSubjectEn?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubjectFr?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  template?: Prisma.TemplateUpdateOneRequiredWithoutDeliveryOptionNestedInput;
};

export type DeliveryOptionUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  emailAddress?: Prisma.StringFieldUpdateOperationsInput | string;
  emailSubjectEn?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubjectFr?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  templateId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type DeliveryOptionCreateManyInput = {
  id?: string;
  emailAddress: string;
  emailSubjectEn?: string | null;
  emailSubjectFr?: string | null;
  templateId: string;
};

export type DeliveryOptionUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  emailAddress?: Prisma.StringFieldUpdateOperationsInput | string;
  emailSubjectEn?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubjectFr?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type DeliveryOptionUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  emailAddress?: Prisma.StringFieldUpdateOperationsInput | string;
  emailSubjectEn?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubjectFr?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  templateId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type DeliveryOptionNullableScalarRelationFilter = {
  is?: Prisma.DeliveryOptionWhereInput | null;
  isNot?: Prisma.DeliveryOptionWhereInput | null;
};

export type DeliveryOptionCountOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  emailAddress?: Prisma.SortOrder;
  emailSubjectEn?: Prisma.SortOrder;
  emailSubjectFr?: Prisma.SortOrder;
  templateId?: Prisma.SortOrder;
};

export type DeliveryOptionMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  emailAddress?: Prisma.SortOrder;
  emailSubjectEn?: Prisma.SortOrder;
  emailSubjectFr?: Prisma.SortOrder;
  templateId?: Prisma.SortOrder;
};

export type DeliveryOptionMinOrderByAggregateInput = {
  id?: Prisma.SortOrder;
  emailAddress?: Prisma.SortOrder;
  emailSubjectEn?: Prisma.SortOrder;
  emailSubjectFr?: Prisma.SortOrder;
  templateId?: Prisma.SortOrder;
};

export type DeliveryOptionCreateNestedOneWithoutTemplateInput = {
  create?: Prisma.XOR<
    Prisma.DeliveryOptionCreateWithoutTemplateInput,
    Prisma.DeliveryOptionUncheckedCreateWithoutTemplateInput
  >;
  connectOrCreate?: Prisma.DeliveryOptionCreateOrConnectWithoutTemplateInput;
  connect?: Prisma.DeliveryOptionWhereUniqueInput;
};

export type DeliveryOptionUncheckedCreateNestedOneWithoutTemplateInput = {
  create?: Prisma.XOR<
    Prisma.DeliveryOptionCreateWithoutTemplateInput,
    Prisma.DeliveryOptionUncheckedCreateWithoutTemplateInput
  >;
  connectOrCreate?: Prisma.DeliveryOptionCreateOrConnectWithoutTemplateInput;
  connect?: Prisma.DeliveryOptionWhereUniqueInput;
};

export type DeliveryOptionUpdateOneWithoutTemplateNestedInput = {
  create?: Prisma.XOR<
    Prisma.DeliveryOptionCreateWithoutTemplateInput,
    Prisma.DeliveryOptionUncheckedCreateWithoutTemplateInput
  >;
  connectOrCreate?: Prisma.DeliveryOptionCreateOrConnectWithoutTemplateInput;
  upsert?: Prisma.DeliveryOptionUpsertWithoutTemplateInput;
  disconnect?: Prisma.DeliveryOptionWhereInput | boolean;
  delete?: Prisma.DeliveryOptionWhereInput | boolean;
  connect?: Prisma.DeliveryOptionWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.DeliveryOptionUpdateToOneWithWhereWithoutTemplateInput,
      Prisma.DeliveryOptionUpdateWithoutTemplateInput
    >,
    Prisma.DeliveryOptionUncheckedUpdateWithoutTemplateInput
  >;
};

export type DeliveryOptionUncheckedUpdateOneWithoutTemplateNestedInput = {
  create?: Prisma.XOR<
    Prisma.DeliveryOptionCreateWithoutTemplateInput,
    Prisma.DeliveryOptionUncheckedCreateWithoutTemplateInput
  >;
  connectOrCreate?: Prisma.DeliveryOptionCreateOrConnectWithoutTemplateInput;
  upsert?: Prisma.DeliveryOptionUpsertWithoutTemplateInput;
  disconnect?: Prisma.DeliveryOptionWhereInput | boolean;
  delete?: Prisma.DeliveryOptionWhereInput | boolean;
  connect?: Prisma.DeliveryOptionWhereUniqueInput;
  update?: Prisma.XOR<
    Prisma.XOR<
      Prisma.DeliveryOptionUpdateToOneWithWhereWithoutTemplateInput,
      Prisma.DeliveryOptionUpdateWithoutTemplateInput
    >,
    Prisma.DeliveryOptionUncheckedUpdateWithoutTemplateInput
  >;
};

export type DeliveryOptionCreateWithoutTemplateInput = {
  id?: string;
  emailAddress: string;
  emailSubjectEn?: string | null;
  emailSubjectFr?: string | null;
};

export type DeliveryOptionUncheckedCreateWithoutTemplateInput = {
  id?: string;
  emailAddress: string;
  emailSubjectEn?: string | null;
  emailSubjectFr?: string | null;
};

export type DeliveryOptionCreateOrConnectWithoutTemplateInput = {
  where: Prisma.DeliveryOptionWhereUniqueInput;
  create: Prisma.XOR<
    Prisma.DeliveryOptionCreateWithoutTemplateInput,
    Prisma.DeliveryOptionUncheckedCreateWithoutTemplateInput
  >;
};

export type DeliveryOptionUpsertWithoutTemplateInput = {
  update: Prisma.XOR<
    Prisma.DeliveryOptionUpdateWithoutTemplateInput,
    Prisma.DeliveryOptionUncheckedUpdateWithoutTemplateInput
  >;
  create: Prisma.XOR<
    Prisma.DeliveryOptionCreateWithoutTemplateInput,
    Prisma.DeliveryOptionUncheckedCreateWithoutTemplateInput
  >;
  where?: Prisma.DeliveryOptionWhereInput;
};

export type DeliveryOptionUpdateToOneWithWhereWithoutTemplateInput = {
  where?: Prisma.DeliveryOptionWhereInput;
  data: Prisma.XOR<
    Prisma.DeliveryOptionUpdateWithoutTemplateInput,
    Prisma.DeliveryOptionUncheckedUpdateWithoutTemplateInput
  >;
};

export type DeliveryOptionUpdateWithoutTemplateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  emailAddress?: Prisma.StringFieldUpdateOperationsInput | string;
  emailSubjectEn?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubjectFr?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type DeliveryOptionUncheckedUpdateWithoutTemplateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string;
  emailAddress?: Prisma.StringFieldUpdateOperationsInput | string;
  emailSubjectEn?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
  emailSubjectFr?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
};

export type DeliveryOptionSelect<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    emailAddress?: boolean;
    emailSubjectEn?: boolean;
    emailSubjectFr?: boolean;
    templateId?: boolean;
    template?: boolean | Prisma.TemplateDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["deliveryOption"]
>;

export type DeliveryOptionSelectCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    emailAddress?: boolean;
    emailSubjectEn?: boolean;
    emailSubjectFr?: boolean;
    templateId?: boolean;
    template?: boolean | Prisma.TemplateDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["deliveryOption"]
>;

export type DeliveryOptionSelectUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
  {
    id?: boolean;
    emailAddress?: boolean;
    emailSubjectEn?: boolean;
    emailSubjectFr?: boolean;
    templateId?: boolean;
    template?: boolean | Prisma.TemplateDefaultArgs<ExtArgs>;
  },
  ExtArgs["result"]["deliveryOption"]
>;

export type DeliveryOptionSelectScalar = {
  id?: boolean;
  emailAddress?: boolean;
  emailSubjectEn?: boolean;
  emailSubjectFr?: boolean;
  templateId?: boolean;
};

export type DeliveryOptionOmit<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
  "id" | "emailAddress" | "emailSubjectEn" | "emailSubjectFr" | "templateId",
  ExtArgs["result"]["deliveryOption"]
>;
export type DeliveryOptionInclude<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  template?: boolean | Prisma.TemplateDefaultArgs<ExtArgs>;
};
export type DeliveryOptionIncludeCreateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  template?: boolean | Prisma.TemplateDefaultArgs<ExtArgs>;
};
export type DeliveryOptionIncludeUpdateManyAndReturn<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  template?: boolean | Prisma.TemplateDefaultArgs<ExtArgs>;
};

export type $DeliveryOptionPayload<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  name: "DeliveryOption";
  objects: {
    template: Prisma.$TemplatePayload<ExtArgs>;
  };
  scalars: runtime.Types.Extensions.GetPayloadResult<
    {
      id: string;
      emailAddress: string;
      emailSubjectEn: string | null;
      emailSubjectFr: string | null;
      templateId: string;
    },
    ExtArgs["result"]["deliveryOption"]
  >;
  composites: {};
};

export type DeliveryOptionGetPayload<
  S extends boolean | null | undefined | DeliveryOptionDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$DeliveryOptionPayload, S>;

export type DeliveryOptionCountArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<DeliveryOptionFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
  select?: DeliveryOptionCountAggregateInputType | true;
};

export interface DeliveryOptionDelegate<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> {
  [K: symbol]: {
    types: Prisma.TypeMap<ExtArgs>["model"]["DeliveryOption"];
    meta: { name: "DeliveryOption" };
  };
  /**
   * Find zero or one DeliveryOption that matches the filter.
   * @param {DeliveryOptionFindUniqueArgs} args - Arguments to find a DeliveryOption
   * @example
   * // Get one DeliveryOption
   * const deliveryOption = await prisma.deliveryOption.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends DeliveryOptionFindUniqueArgs>(
    args: Prisma.SelectSubset<T, DeliveryOptionFindUniqueArgs<ExtArgs>>
  ): Prisma.Prisma__DeliveryOptionClient<
    runtime.Types.Result.GetResult<
      Prisma.$DeliveryOptionPayload<ExtArgs>,
      T,
      "findUnique",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find one DeliveryOption that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {DeliveryOptionFindUniqueOrThrowArgs} args - Arguments to find a DeliveryOption
   * @example
   * // Get one DeliveryOption
   * const deliveryOption = await prisma.deliveryOption.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends DeliveryOptionFindUniqueOrThrowArgs>(
    args: Prisma.SelectSubset<T, DeliveryOptionFindUniqueOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__DeliveryOptionClient<
    runtime.Types.Result.GetResult<
      Prisma.$DeliveryOptionPayload<ExtArgs>,
      T,
      "findUniqueOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first DeliveryOption that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DeliveryOptionFindFirstArgs} args - Arguments to find a DeliveryOption
   * @example
   * // Get one DeliveryOption
   * const deliveryOption = await prisma.deliveryOption.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends DeliveryOptionFindFirstArgs>(
    args?: Prisma.SelectSubset<T, DeliveryOptionFindFirstArgs<ExtArgs>>
  ): Prisma.Prisma__DeliveryOptionClient<
    runtime.Types.Result.GetResult<
      Prisma.$DeliveryOptionPayload<ExtArgs>,
      T,
      "findFirst",
      GlobalOmitOptions
    > | null,
    null,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find the first DeliveryOption that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DeliveryOptionFindFirstOrThrowArgs} args - Arguments to find a DeliveryOption
   * @example
   * // Get one DeliveryOption
   * const deliveryOption = await prisma.deliveryOption.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends DeliveryOptionFindFirstOrThrowArgs>(
    args?: Prisma.SelectSubset<T, DeliveryOptionFindFirstOrThrowArgs<ExtArgs>>
  ): Prisma.Prisma__DeliveryOptionClient<
    runtime.Types.Result.GetResult<
      Prisma.$DeliveryOptionPayload<ExtArgs>,
      T,
      "findFirstOrThrow",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Find zero or more DeliveryOptions that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DeliveryOptionFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all DeliveryOptions
   * const deliveryOptions = await prisma.deliveryOption.findMany()
   *
   * // Get first 10 DeliveryOptions
   * const deliveryOptions = await prisma.deliveryOption.findMany({ take: 10 })
   *
   * // Only select the `id`
   * const deliveryOptionWithIdOnly = await prisma.deliveryOption.findMany({ select: { id: true } })
   *
   */
  findMany<T extends DeliveryOptionFindManyArgs>(
    args?: Prisma.SelectSubset<T, DeliveryOptionFindManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$DeliveryOptionPayload<ExtArgs>,
      T,
      "findMany",
      GlobalOmitOptions
    >
  >;

  /**
   * Create a DeliveryOption.
   * @param {DeliveryOptionCreateArgs} args - Arguments to create a DeliveryOption.
   * @example
   * // Create one DeliveryOption
   * const DeliveryOption = await prisma.deliveryOption.create({
   *   data: {
   *     // ... data to create a DeliveryOption
   *   }
   * })
   *
   */
  create<T extends DeliveryOptionCreateArgs>(
    args: Prisma.SelectSubset<T, DeliveryOptionCreateArgs<ExtArgs>>
  ): Prisma.Prisma__DeliveryOptionClient<
    runtime.Types.Result.GetResult<
      Prisma.$DeliveryOptionPayload<ExtArgs>,
      T,
      "create",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Create many DeliveryOptions.
   * @param {DeliveryOptionCreateManyArgs} args - Arguments to create many DeliveryOptions.
   * @example
   * // Create many DeliveryOptions
   * const deliveryOption = await prisma.deliveryOption.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   */
  createMany<T extends DeliveryOptionCreateManyArgs>(
    args?: Prisma.SelectSubset<T, DeliveryOptionCreateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Create many DeliveryOptions and returns the data saved in the database.
   * @param {DeliveryOptionCreateManyAndReturnArgs} args - Arguments to create many DeliveryOptions.
   * @example
   * // Create many DeliveryOptions
   * const deliveryOption = await prisma.deliveryOption.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Create many DeliveryOptions and only return the `id`
   * const deliveryOptionWithIdOnly = await prisma.deliveryOption.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  createManyAndReturn<T extends DeliveryOptionCreateManyAndReturnArgs>(
    args?: Prisma.SelectSubset<T, DeliveryOptionCreateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$DeliveryOptionPayload<ExtArgs>,
      T,
      "createManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Delete a DeliveryOption.
   * @param {DeliveryOptionDeleteArgs} args - Arguments to delete one DeliveryOption.
   * @example
   * // Delete one DeliveryOption
   * const DeliveryOption = await prisma.deliveryOption.delete({
   *   where: {
   *     // ... filter to delete one DeliveryOption
   *   }
   * })
   *
   */
  delete<T extends DeliveryOptionDeleteArgs>(
    args: Prisma.SelectSubset<T, DeliveryOptionDeleteArgs<ExtArgs>>
  ): Prisma.Prisma__DeliveryOptionClient<
    runtime.Types.Result.GetResult<
      Prisma.$DeliveryOptionPayload<ExtArgs>,
      T,
      "delete",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Update one DeliveryOption.
   * @param {DeliveryOptionUpdateArgs} args - Arguments to update one DeliveryOption.
   * @example
   * // Update one DeliveryOption
   * const deliveryOption = await prisma.deliveryOption.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  update<T extends DeliveryOptionUpdateArgs>(
    args: Prisma.SelectSubset<T, DeliveryOptionUpdateArgs<ExtArgs>>
  ): Prisma.Prisma__DeliveryOptionClient<
    runtime.Types.Result.GetResult<
      Prisma.$DeliveryOptionPayload<ExtArgs>,
      T,
      "update",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Delete zero or more DeliveryOptions.
   * @param {DeliveryOptionDeleteManyArgs} args - Arguments to filter DeliveryOptions to delete.
   * @example
   * // Delete a few DeliveryOptions
   * const { count } = await prisma.deliveryOption.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   *
   */
  deleteMany<T extends DeliveryOptionDeleteManyArgs>(
    args?: Prisma.SelectSubset<T, DeliveryOptionDeleteManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more DeliveryOptions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DeliveryOptionUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many DeliveryOptions
   * const deliveryOption = await prisma.deliveryOption.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   *
   */
  updateMany<T extends DeliveryOptionUpdateManyArgs>(
    args: Prisma.SelectSubset<T, DeliveryOptionUpdateManyArgs<ExtArgs>>
  ): Prisma.PrismaPromise<Prisma.BatchPayload>;

  /**
   * Update zero or more DeliveryOptions and returns the data updated in the database.
   * @param {DeliveryOptionUpdateManyAndReturnArgs} args - Arguments to update many DeliveryOptions.
   * @example
   * // Update many DeliveryOptions
   * const deliveryOption = await prisma.deliveryOption.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *
   * // Update zero or more DeliveryOptions and only return the `id`
   * const deliveryOptionWithIdOnly = await prisma.deliveryOption.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   *
   */
  updateManyAndReturn<T extends DeliveryOptionUpdateManyAndReturnArgs>(
    args: Prisma.SelectSubset<T, DeliveryOptionUpdateManyAndReturnArgs<ExtArgs>>
  ): Prisma.PrismaPromise<
    runtime.Types.Result.GetResult<
      Prisma.$DeliveryOptionPayload<ExtArgs>,
      T,
      "updateManyAndReturn",
      GlobalOmitOptions
    >
  >;

  /**
   * Create or update one DeliveryOption.
   * @param {DeliveryOptionUpsertArgs} args - Arguments to update or create a DeliveryOption.
   * @example
   * // Update or create a DeliveryOption
   * const deliveryOption = await prisma.deliveryOption.upsert({
   *   create: {
   *     // ... data to create a DeliveryOption
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the DeliveryOption we want to update
   *   }
   * })
   */
  upsert<T extends DeliveryOptionUpsertArgs>(
    args: Prisma.SelectSubset<T, DeliveryOptionUpsertArgs<ExtArgs>>
  ): Prisma.Prisma__DeliveryOptionClient<
    runtime.Types.Result.GetResult<
      Prisma.$DeliveryOptionPayload<ExtArgs>,
      T,
      "upsert",
      GlobalOmitOptions
    >,
    never,
    ExtArgs,
    GlobalOmitOptions
  >;

  /**
   * Count the number of DeliveryOptions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DeliveryOptionCountArgs} args - Arguments to filter DeliveryOptions to count.
   * @example
   * // Count the number of DeliveryOptions
   * const count = await prisma.deliveryOption.count({
   *   where: {
   *     // ... the filter for the DeliveryOptions we want to count
   *   }
   * })
   **/
  count<T extends DeliveryOptionCountArgs>(
    args?: Prisma.Subset<T, DeliveryOptionCountArgs>
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<"select", any>
      ? T["select"] extends true
        ? number
        : Prisma.GetScalarType<T["select"], DeliveryOptionCountAggregateOutputType>
      : number
  >;

  /**
   * Allows you to perform aggregations operations on a DeliveryOption.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DeliveryOptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
   **/
  aggregate<T extends DeliveryOptionAggregateArgs>(
    args: Prisma.Subset<T, DeliveryOptionAggregateArgs>
  ): Prisma.PrismaPromise<GetDeliveryOptionAggregateType<T>>;

  /**
   * Group by DeliveryOption.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {DeliveryOptionGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   *
   **/
  groupBy<
    T extends DeliveryOptionGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<"skip", Prisma.Keys<T>>,
      Prisma.Extends<"take", Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: DeliveryOptionGroupByArgs["orderBy"] }
      : { orderBy?: DeliveryOptionGroupByArgs["orderBy"] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<
      Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
    >,
    ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T["having"]>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
      ? `Error: "by" must not be empty.`
      : HavingValid extends Prisma.False
        ? {
            [P in HavingFields]: P extends ByFields
              ? never
              : P extends string
                ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
                : [Error, "Field ", P, ` in "having" needs to be provided in "by"`];
          }[HavingFields]
        : "take" extends Prisma.Keys<T>
          ? "orderBy" extends Prisma.Keys<T>
            ? ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields]
            : 'Error: If you provide "take", you also need to provide "orderBy"'
          : "skip" extends Prisma.Keys<T>
            ? "orderBy" extends Prisma.Keys<T>
              ? ByValid extends Prisma.True
                ? {}
                : {
                    [P in OrderFields]: P extends ByFields
                      ? never
                      : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                  }[OrderFields]
              : 'Error: If you provide "skip", you also need to provide "orderBy"'
            : ByValid extends Prisma.True
              ? {}
              : {
                  [P in OrderFields]: P extends ByFields
                    ? never
                    : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
                }[OrderFields],
  >(
    args: Prisma.SubsetIntersection<T, DeliveryOptionGroupByArgs, OrderByArg> & InputErrors
  ): {} extends InputErrors
    ? GetDeliveryOptionGroupByPayload<T>
    : Prisma.PrismaPromise<InputErrors>;
  /**
   * Fields of the DeliveryOption model
   */
  readonly fields: DeliveryOptionFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for DeliveryOption.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__DeliveryOptionClient<
  T,
  Null = never,
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
  GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise";
  template<T extends Prisma.TemplateDefaultArgs<ExtArgs> = {}>(
    args?: Prisma.Subset<T, Prisma.TemplateDefaultArgs<ExtArgs>>
  ): Prisma.Prisma__TemplateClient<
    | runtime.Types.Result.GetResult<
        Prisma.$TemplatePayload<ExtArgs>,
        T,
        "findUniqueOrThrow",
        GlobalOmitOptions
      >
    | Null,
    Null,
    ExtArgs,
    GlobalOmitOptions
  >;
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(
    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,
    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null
  ): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(
    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null
  ): runtime.Types.Utils.JsPromise<T | TResult>;
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the DeliveryOption model
 */
export interface DeliveryOptionFieldRefs {
  readonly id: Prisma.FieldRef<"DeliveryOption", "String">;
  readonly emailAddress: Prisma.FieldRef<"DeliveryOption", "String">;
  readonly emailSubjectEn: Prisma.FieldRef<"DeliveryOption", "String">;
  readonly emailSubjectFr: Prisma.FieldRef<"DeliveryOption", "String">;
  readonly templateId: Prisma.FieldRef<"DeliveryOption", "String">;
}

// Custom InputTypes
/**
 * DeliveryOption findUnique
 */
export type DeliveryOptionFindUniqueArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the DeliveryOption
   */
  select?: Prisma.DeliveryOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DeliveryOption
   */
  omit?: Prisma.DeliveryOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DeliveryOptionInclude<ExtArgs> | null;
  /**
   * Filter, which DeliveryOption to fetch.
   */
  where: Prisma.DeliveryOptionWhereUniqueInput;
};

/**
 * DeliveryOption findUniqueOrThrow
 */
export type DeliveryOptionFindUniqueOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the DeliveryOption
   */
  select?: Prisma.DeliveryOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DeliveryOption
   */
  omit?: Prisma.DeliveryOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DeliveryOptionInclude<ExtArgs> | null;
  /**
   * Filter, which DeliveryOption to fetch.
   */
  where: Prisma.DeliveryOptionWhereUniqueInput;
};

/**
 * DeliveryOption findFirst
 */
export type DeliveryOptionFindFirstArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the DeliveryOption
   */
  select?: Prisma.DeliveryOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DeliveryOption
   */
  omit?: Prisma.DeliveryOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DeliveryOptionInclude<ExtArgs> | null;
  /**
   * Filter, which DeliveryOption to fetch.
   */
  where?: Prisma.DeliveryOptionWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of DeliveryOptions to fetch.
   */
  orderBy?:
    | Prisma.DeliveryOptionOrderByWithRelationInput
    | Prisma.DeliveryOptionOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for DeliveryOptions.
   */
  cursor?: Prisma.DeliveryOptionWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` DeliveryOptions from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` DeliveryOptions.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of DeliveryOptions.
   */
  distinct?: Prisma.DeliveryOptionScalarFieldEnum | Prisma.DeliveryOptionScalarFieldEnum[];
};

/**
 * DeliveryOption findFirstOrThrow
 */
export type DeliveryOptionFindFirstOrThrowArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the DeliveryOption
   */
  select?: Prisma.DeliveryOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DeliveryOption
   */
  omit?: Prisma.DeliveryOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DeliveryOptionInclude<ExtArgs> | null;
  /**
   * Filter, which DeliveryOption to fetch.
   */
  where?: Prisma.DeliveryOptionWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of DeliveryOptions to fetch.
   */
  orderBy?:
    | Prisma.DeliveryOptionOrderByWithRelationInput
    | Prisma.DeliveryOptionOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for searching for DeliveryOptions.
   */
  cursor?: Prisma.DeliveryOptionWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` DeliveryOptions from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` DeliveryOptions.
   */
  skip?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   *
   * Filter by unique combinations of DeliveryOptions.
   */
  distinct?: Prisma.DeliveryOptionScalarFieldEnum | Prisma.DeliveryOptionScalarFieldEnum[];
};

/**
 * DeliveryOption findMany
 */
export type DeliveryOptionFindManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the DeliveryOption
   */
  select?: Prisma.DeliveryOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DeliveryOption
   */
  omit?: Prisma.DeliveryOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DeliveryOptionInclude<ExtArgs> | null;
  /**
   * Filter, which DeliveryOptions to fetch.
   */
  where?: Prisma.DeliveryOptionWhereInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   *
   * Determine the order of DeliveryOptions to fetch.
   */
  orderBy?:
    | Prisma.DeliveryOptionOrderByWithRelationInput
    | Prisma.DeliveryOptionOrderByWithRelationInput[];
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   *
   * Sets the position for listing DeliveryOptions.
   */
  cursor?: Prisma.DeliveryOptionWhereUniqueInput;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Take `Â±n` DeliveryOptions from the position of the cursor.
   */
  take?: number;
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   *
   * Skip the first `n` DeliveryOptions.
   */
  skip?: number;
  distinct?: Prisma.DeliveryOptionScalarFieldEnum | Prisma.DeliveryOptionScalarFieldEnum[];
};

/**
 * DeliveryOption create
 */
export type DeliveryOptionCreateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the DeliveryOption
   */
  select?: Prisma.DeliveryOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DeliveryOption
   */
  omit?: Prisma.DeliveryOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DeliveryOptionInclude<ExtArgs> | null;
  /**
   * The data needed to create a DeliveryOption.
   */
  data: Prisma.XOR<Prisma.DeliveryOptionCreateInput, Prisma.DeliveryOptionUncheckedCreateInput>;
};

/**
 * DeliveryOption createMany
 */
export type DeliveryOptionCreateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to create many DeliveryOptions.
   */
  data: Prisma.DeliveryOptionCreateManyInput | Prisma.DeliveryOptionCreateManyInput[];
  skipDuplicates?: boolean;
};

/**
 * DeliveryOption createManyAndReturn
 */
export type DeliveryOptionCreateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the DeliveryOption
   */
  select?: Prisma.DeliveryOptionSelectCreateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the DeliveryOption
   */
  omit?: Prisma.DeliveryOptionOmit<ExtArgs> | null;
  /**
   * The data used to create many DeliveryOptions.
   */
  data: Prisma.DeliveryOptionCreateManyInput | Prisma.DeliveryOptionCreateManyInput[];
  skipDuplicates?: boolean;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DeliveryOptionIncludeCreateManyAndReturn<ExtArgs> | null;
};

/**
 * DeliveryOption update
 */
export type DeliveryOptionUpdateArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the DeliveryOption
   */
  select?: Prisma.DeliveryOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DeliveryOption
   */
  omit?: Prisma.DeliveryOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DeliveryOptionInclude<ExtArgs> | null;
  /**
   * The data needed to update a DeliveryOption.
   */
  data: Prisma.XOR<Prisma.DeliveryOptionUpdateInput, Prisma.DeliveryOptionUncheckedUpdateInput>;
  /**
   * Choose, which DeliveryOption to update.
   */
  where: Prisma.DeliveryOptionWhereUniqueInput;
};

/**
 * DeliveryOption updateMany
 */
export type DeliveryOptionUpdateManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * The data used to update DeliveryOptions.
   */
  data: Prisma.XOR<
    Prisma.DeliveryOptionUpdateManyMutationInput,
    Prisma.DeliveryOptionUncheckedUpdateManyInput
  >;
  /**
   * Filter which DeliveryOptions to update
   */
  where?: Prisma.DeliveryOptionWhereInput;
  /**
   * Limit how many DeliveryOptions to update.
   */
  limit?: number;
};

/**
 * DeliveryOption updateManyAndReturn
 */
export type DeliveryOptionUpdateManyAndReturnArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the DeliveryOption
   */
  select?: Prisma.DeliveryOptionSelectUpdateManyAndReturn<ExtArgs> | null;
  /**
   * Omit specific fields from the DeliveryOption
   */
  omit?: Prisma.DeliveryOptionOmit<ExtArgs> | null;
  /**
   * The data used to update DeliveryOptions.
   */
  data: Prisma.XOR<
    Prisma.DeliveryOptionUpdateManyMutationInput,
    Prisma.DeliveryOptionUncheckedUpdateManyInput
  >;
  /**
   * Filter which DeliveryOptions to update
   */
  where?: Prisma.DeliveryOptionWhereInput;
  /**
   * Limit how many DeliveryOptions to update.
   */
  limit?: number;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DeliveryOptionIncludeUpdateManyAndReturn<ExtArgs> | null;
};

/**
 * DeliveryOption upsert
 */
export type DeliveryOptionUpsertArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the DeliveryOption
   */
  select?: Prisma.DeliveryOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DeliveryOption
   */
  omit?: Prisma.DeliveryOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DeliveryOptionInclude<ExtArgs> | null;
  /**
   * The filter to search for the DeliveryOption to update in case it exists.
   */
  where: Prisma.DeliveryOptionWhereUniqueInput;
  /**
   * In case the DeliveryOption found by the `where` argument doesn't exist, create a new DeliveryOption with this data.
   */
  create: Prisma.XOR<Prisma.DeliveryOptionCreateInput, Prisma.DeliveryOptionUncheckedCreateInput>;
  /**
   * In case the DeliveryOption was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.DeliveryOptionUpdateInput, Prisma.DeliveryOptionUncheckedUpdateInput>;
};

/**
 * DeliveryOption delete
 */
export type DeliveryOptionDeleteArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the DeliveryOption
   */
  select?: Prisma.DeliveryOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DeliveryOption
   */
  omit?: Prisma.DeliveryOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DeliveryOptionInclude<ExtArgs> | null;
  /**
   * Filter which DeliveryOption to delete.
   */
  where: Prisma.DeliveryOptionWhereUniqueInput;
};

/**
 * DeliveryOption deleteMany
 */
export type DeliveryOptionDeleteManyArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Filter which DeliveryOptions to delete
   */
  where?: Prisma.DeliveryOptionWhereInput;
  /**
   * Limit how many DeliveryOptions to delete.
   */
  limit?: number;
};

/**
 * DeliveryOption without action
 */
export type DeliveryOptionDefaultArgs<
  ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
  /**
   * Select specific fields to fetch from the DeliveryOption
   */
  select?: Prisma.DeliveryOptionSelect<ExtArgs> | null;
  /**
   * Omit specific fields from the DeliveryOption
   */
  omit?: Prisma.DeliveryOptionOmit<ExtArgs> | null;
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.DeliveryOptionInclude<ExtArgs> | null;
};
